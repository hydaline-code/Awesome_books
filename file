// eslint-disable-next-line max-classes-per-file
class Book {
  constructor(title, author) {
    this.id = Book.generateId();
    this.title = title;
    this.author = author;
  }

  static generateId() {
    if (!this.counter) {
      this.counter = 1;
    }
    return this.counter++;
  }
}
class BookStore {
  constructor() {
    this.books = [];
    this.booksList = document.getElementById('books');
    this.titleInput = document.getElementById('title');
    this.authorInput = document.getElementById('author');
    this.addBtn = document.getElementById('add');
    this.loadBooks();
    this.displayBooks();
    this.addEventListeners();
  }

  displayBooks() {
    this.booksList.innerHTML = '';
    this.books.forEach((book) => {
      const listItem = document.createElement('li');
      const titleItem = document.createElement('span');
      const authorItem = document.createElement('span');
      const removeBtn = document.createElement('button');
      const line = document.createElement('hr');
      titleItem.textContent = book.title;
      authorItem.textContent = book.author;
      removeBtn.textContent = 'Remove';
      removeBtn.classList.add('remove');
      listItem.appendChild(titleItem);
      listItem.appendChild(authorItem);
      listItem.appendChild(removeBtn);
      listItem.appendChild(line);
      removeBtn.addEventListener('click', () => this.removeBook(book.id));
      this.booksList.appendChild(listItem);
    });
  }

  addBook() {
    const title = this.titleInput.value;
    const author = this.authorInput.value;
    if (title && author && !this.isDuplicate(title, author)) {
      const book = new Book(title, author);
      this.books.push(book);
      this.saveBooks();
      this.displayBooks();
      this.titleInput.value = '';
      this.authorInput.value = '';
    }
  }

  isDuplicate(title, author) {
    return this.books.some((book) => book.title === title && book.author === author);
  }

  removeBook(id) {
    const index = this.books.findIndex((book) => book.id === id);
    if (index !== -1) {
      this.books.splice(index, 1);
      this.saveBooks();
      this.displayBooks();
    }
  }

  loadBooks() {
    const storage = localStorage.getItem('books');
    if (storage) {
      this.books = JSON.parse(storage).map((book) => new Book(book.title, book.author));
    }
  }

  saveBooks() {
    localStorage.setItem('books', JSON.stringify(this.books));
  }

  addEventListeners() {
    this.addBtn.addEventListener('click', () => this.addBook());
  }
}
const bookStore = new BookStore();